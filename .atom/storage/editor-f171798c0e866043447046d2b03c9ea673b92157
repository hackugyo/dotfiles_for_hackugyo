{"mode":"editor","version":1,"windowDimensions":{"x":475,"y":22,"width":1024,"height":1058},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/whiteplus/wp","buffers":[{"text":"<?\nrequire_once '/var/www/vhosts/kuritaku.jp/httpdocs/inc/CMScs/import.php'; //必要ファイル読み込み\n//対象者取得\n$tar = getSendHoldOrder();\n?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<meta http-equiv=\"Content-Language\" content=\"ja\" />\n<meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\n<meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" />\n<title>発送メール</title>\n<script charset=\"utf-8\" type=\"text/javascript\" language=\"JavaScript\" src=\"../js/jquery.js\"></script>\n</head>\n<body>\n\t<ul id=\"names\" style=\"list-style:none;\">\n\t<?php if( empty($tar) ):?>\n\t\t対象者がいませんでした。\n\t<?php else:?>\n\t\t<?php foreach($tar as $k => $v):?>\n\t\t\t<li>\n\t\t\t<a href=\"./Send_Edit.php?orderid=<?php echo $v['oid']?>\"><?php echo date(\"n/j\",strtotime($v['pDay']))?></a>\n\t\t\t<a href=\"./Send_Edit.php?orderid=<?php echo $v['oid']?>\"><?php echo $v['name']?></a>\n\t\t\t<span style=\"font-size:50%;\"><?php echo $v['oid']?></span>\n\t\t\t</li>\n\t\t<?php endforeach;?>\n\t<?php endif;?>\n\t</ul>\n</body>\n</html>","markers":{"markers":{"1":{"id":1,"range":[[9,28],[9,28]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":18,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/wp/wh-plus.com/httpdocs/dash/cs/send/index.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9d0f0b5492850921532368838b8916f041d693fd","deserializer":"TextBuffer"},{"text":"<?php\n\nrequire_once dirname(__FILE__).'/define.php';\nrequire_once dirname(__FILE__).'/../classes/models/user_device_token.php';\nrequire_once dirname(__FILE__).'/../classes/models/message.php';\nrequire_once dirname(__FILE__).'/../../vendor/apns/registerMessage.php';\nrequire_once dirname(__FILE__).'/../../vendor/apns/processMessageQueueFunc.php';\nrequire_once dirname(__FILE__).'/../../vendor/apns/processFeedbackFunc.php';\n\n// 指定したユーザに指定したメッセージをただちにPush通知を送信する\nfunction sendNotificationImmediate($message, $user_id) {\n\t$user_device_token = API_UserDeviceToken::findByUserId($user_id);\n\tif (empty($user_device_token)) {\n\t\treturn;\n\t}\n\n\tif ($user_device_token->device_type == API_UserDeviceToken::DEVICE_TYPE_IPHONE) {\n\t\t$badge = API_Message::countUnreadMessagesForApp($user_device_token->user_id);\n\n\t\tsendNotificationImmediageForiOS($message, $user_device_token->device_token, $badge);\n\t} else if ($user_device_token->device_type == API_UserDeviceToken::DEVICE_TYPE_ANDROID) {\n\t\tsendNotificationImmediageForAndroid($message, $user_device_token->device_type);\n\t}\n}\n\nfunction sendNotificationImmediageForiOS($message, $device_token, $badge = NULL) {\n\tregisterMessageWithDeviceToken($message, NOTIFICATION_IOS_CERTIFICATE_ID, NOTIFICATION_IOS_APP_ID, $device_token, $badge);\n\tprocessMessageQueue();\n}\n\n// Androidは初回フェーズではリリースしないので空実装にしておく。\nfunction sendNotificationImmediageForAndroid($message, $device_token) {\n\n}\n\n\n// メッセージをpush通知用のキューに保存する。(送信処理は行わない)\nfunction pushNotificationQueue($message, $user_device_token) {\n\tif ($user_device_token->device_type == API_UserDeviceToken::DEVICE_TYPE_IPHONE) {\n\t\t$badge = API_Message::countUnreadMessagesForApp($user_device_token->user_id);\n\t\tpushNotificationQueueForiOS($message, $user_device_token->device_token, $badge);\n\t} else if ($user_device_token->device_type == API_UserDeviceToken::DEVICE_TYPE_ANDROID) {\n\t\tpushNotificationQueueForAndroid($message, $user_device_token->device_type);\n\t}\n}\n\nfunction pushNotificationQueueForiOS($message, $device_token, $badge = NULL) {\n\tregisterMessageWithDeviceToken($message, NOTIFICATION_IOS_CERTIFICATE_ID, NOTIFICATION_IOS_APP_ID, $device_token, $badge);\n}\n\n// Androidは初回フェーズではリリースしないので空実装にしておく。\nfunction pushNotificationQueueForAndroid($message, $device_token) {\n\n}\n\n// キューに格納したメッセージを送信する。\nfunction sendNotificaiton() {\n\tsendNotificationForiOS();\n\tsendNotificaitonForAndroid();\n}\n\nfunction sendNotificationForiOS() {\n\tprocessMessageQueue();\n}\n\n// Androidは初回フェーズではリリースしないので空実装にしておく。\nfunction sendNotificaitonForAndroid() {\n\n}\n\n\n// APNs/GCMのフィードバックを受ける\nfunction notificationFeedBack() {\n\tnotificationFeedBackForiOS();\n\tnotificationFeedBackForAndroid();\n}\n\nfunction notificationFeedBackForiOS() {\n\tprocessFeedBack();\n}\n\n// Androidは初回フェーズではリリースしないので空実装にしておく。\nfunction notificationFeedBackForAndroid() {\n\n}","markers":{"markers":{"1":{"id":1,"range":[[37,9],[37,31]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":100,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/wp/lenet_common/api/libs/notification_utils.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3ce503924984c733acf96348226026f33dc8d6f5","deserializer":"TextBuffer"},{"text":"<?php\n\nrequire_once dirname(__FILE__).'/../api/classes/models/coupon_message_queue.php';\nrequire_once dirname(__FILE__).'/../api/classes/models/user_device_token.php';\nrequire_once dirname(__FILE__).'/../api/classes/models/user.php';\nrequire_once dirname(__FILE__).'/../api/classes/models/message.php';\nrequire_once dirname(__FILE__).'/../api/libs/notification_utils.php';\n\ndefine('ORDER_COLLECT_MESSAGE_TYPE', 9);\ndefine('ORDER_COLLECT_SUB_MESSAGE_TYPE', 12);\ndefine('ORDER_COLLECT_TITLE_SHORT', '明日は集荷日です');\ndefine('ORDER_COLLECT_TITLE_DESC', 'お届け先住所にて、お受け取り');\n\n// タイムゾーンをセットする\n$org_timezone = date_default_timezone_get();\ndate_default_timezone_set('Asia/Tokyo');\n\n// 配信対象のユーザを取得する\n$user_tokens = API_UserDeviceToken::findOrderCollectTomorrowUsers();\necho 'send user count : '.count($user_tokens).\"\\n\";\n\n// デバイストークンでループ\nforeach ($user_tokens as $user_token) {\n\t// メッセージを書き込む\n\tinsertCollectMessage($user_token->user_id);\n\t// プッシュ通知をプッシュ通知用のキューテーブルに格納する\n\t$pushText = ORDER_COLLECT_TITLE_SHORT.\"\\n\".ORDER_COLLECT_TITLE_DESC;\n\tpushNotificationQueue($pushText, $user_token);\n}\n\n// プッシュ通知のキューにためたメッセージを送信する。\nsendNotificaiton();\n// APNs/GCMのフィードバックを受ける\nnotificationFeedBack();\n\n// TimeZoneを元に戻す\ndate_default_timezone_set($org_timezone);\n\nfunction insertCollectMessage($uid) {\n\t$title = ORDER_COLLECT_TITLE_SHORT.' '.ORDER_COLLECT_TITLE_DESC;\n\t$message = API_Message::buildMessage($uid, $title, '', ORDER_COLLECT_MESSAGE_TYPE, ORDER_COLLECT_SUB_MESSAGE_TYPE, ORDER_COLLECT_TITLE_SHORT, ORDER_COLLECT_TITLE_DESC);\n\t$message->insert();\n}","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":104},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/wp/lenet_common/batch/send_collect_message_batch.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"55901924514bcf0ee0334b5473de84da82008cd2","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":18,"softTabs":false,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":19,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/wp/wh-plus.com/httpdocs/dash/cs/send/index.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":100,"softTabs":false,"scrollTop":417,"scrollLeft":0,"displayBuffer":{"id":101,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/wp/lenet_common/api/libs/notification_utils.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":104,"softTabs":false,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":105,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/wp/lenet_common/batch/send_collect_message_batch.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/whiteplus/wp/lenet_common/batch/send_collect_message_batch.php","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/kwatanabe/git/whiteplus/wp/wh-plus.com/httpdocs/dash/cs/send/index.php":1397548367394,"/Users/kwatanabe/git/whiteplus/wp/lenet_common/api/libs/notification_utils.php":1397548759333,"/Users/kwatanabe/git/whiteplus/wp/lenet_common/batch/send_collect_message_batch.php":1397548775252},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":524602},"tree-view":{"directoryExpansionStates":{"wh-plus.com":{"httpdocs":{"dash":{"cs":{}}}}},"selectedPath":"/Users/kwatanabe/git/whiteplus/wp/lenet_common","hasFocus":false,"attached":true,"scrollLeft":61,"scrollTop":645,"width":200}}}