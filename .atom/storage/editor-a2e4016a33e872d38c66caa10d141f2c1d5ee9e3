{"mode":"editor","version":1,"windowDimensions":{"x":1120,"y":44,"width":1024,"height":1024},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user","buffers":[{"text":"<?php\n/**\n * クーポン詳細取得API\n *\n */\nclass Controller_Api_User_Coupons extends Controller_Api_Base\n{\n    public function get_index()\n    {\n        try {\n            $validation_rule_url = self::create_validation_url();\n            if (! $validation_rule_url->run(array('coupon_code' => $this->param('coupon_code'))))\n            {\n                $this->error400();\n                return;\n            }\n            $validation_rule_params = self::create_validation_params();\n            if (! $validation_rule_params->run(\\Input::json()))\n            {\n                $this->error400();\n                return;\n            }\n            $coupon_code = $validation_rule_url->input('coupon_code');\n            $space_type_id = $validation_rule_params->input('space_type_id');\n\n            $campaign = Model_Logic_Campaign::find_by_coupon($coupon_code);\n\n            // 収納スペース料金プランの、クーポン適用後の初月請求予定額\n            // FIXME 負になるときもある。計算条件は？\n            $discount = $campaign['discount_space_price'];\n            $space_charge = $this->get_space_charge($space_type_id, $discount);\n\n            $result = array(\n                'coupon_description' => $campaign['description'],\n                'space_charge' => $space_charge,\n            );\n            $this->response($result);\n\n        } catch (HiroieException $he) {\n\n            $error_code = $he->getMessage();\n            if (strstr($error_code, 'C001-E')\n                || strstr($error_code, 'C002-E')\n                || strstr($error_code, 'H001-E'))\n            {\n                $message = Util_Message::get_app_message($error_code);\n                $this->response($this->make_error_response_body($message), 400);\n            }\n            else\n            {\n                $this->error500();\n            }\n        } catch (Exception $e) {\n            $this->do_logger_exception($e);\n            $this->error500();\n        }\n    }\n\n    private static function create_validation_url()\n    {\n        $validation_rule= Validation::forge('URL');\n        $validation_rule->add('coupon_code', 'クーポン番号')\n        ->add_rule('required')\n        ->add_rule('valid_string', array('alpha', 'numeric'));\n        return $validation_rule;\n    }\n\n    private static function create_validation_params()\n    {\n        $validation_rule= Validation::forge('URLパラメタ');\n        $validation_rule->add('space_type_id', '収納スペースプランのID')\n        ->add_rule('required')\n        // FIXME stringではなくnumericの検査をしたい\n        ->add_rule('valid_string', array('numeric'));\n        return $validation_rule;\n    }\n\n    /**\n    * @param $space_id\n    * @param $discount\n    *\n    * @return int\n    * @throws HiroieException\n    */\n    private function get_space_charge($space_id, $discount)\n    {\n        $space_charge = Model_Datasource_SpaceCharge::find_by_space_id($space_id);\n        if (empty($space_charge))\n        {\n            throw new HiroieException('H001-E', Util_Message::get_system_message('H001-E'));\n        }\n        $price = $space_charge['price'];\n        return intval($price - $discount);\n    }\n\n}\n","markers":{"markers":{"1":{"id":1,"range":[[70,0],[70,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":178,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"9":{"id":9,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[26,0],[32,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"15":{"id":15,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"16":{"id":16,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"17":{"id":17,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"18":{"id":18,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19":{"id":19,"range":[[77,0],[95,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/coupons.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9dfd535e69cb95bae220d0528d3a7b292fa6f39c","deserializer":"TextBuffer"},{"text":"<?php\n\nclass Controller_Api_User_Version extends Controller_Api_Base\n{\n    public function get_index()\n    {\n        // TODO define const version.\n        $this->response();\n    }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[7,26],[7,26]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":190,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/version.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2b925c2a2c8e192a8a26ff76f1ebb86851a95daf","deserializer":"TextBuffer"},{"text":"<?php\n\nclass Controller_Api_User_Addresses extends Controller_Api_Base\n{\n\n    public function get_index()\n    {\n        try {\n          $validation_rule = self::create_validation();\n          if ( ! $validation_rule->run(\\Input::get()))\n          {\n              $this->error400();\n              return;\n          }\n          else\n          {\n              $input = $validation_rule->input();\n              $addresses = Model_Datasource_Zipcode::find_by_zipcode($input['zipcode']);\n              if ( ! $addresses ) { // PHPでは if ( array() ){} //  => false\n                  $message = '住所が見つかりません。';\n                  $this->response($this->make_error_response_body($message), 404);\n                  return;\n              }\n              $response = $this->convert($addresses[0]);\n              $this->response($response);\n              return;\n          }\n        } catch (Exception $e) {\n            $this->do_logger_exception($e);\n            $this->error500();\n        }\n    }\n\n\n    private static function create_validation()\n    {\n        $validation_rule = Validation::forge('address');\n        $validation_rule->add('zipcode', '郵便番号')\n          ->add_rule('required')\n          ->add_rule('valid_string', array('numeric'))\n          ->add_rule('max_length', 7);\n        return $validation_rule;\n    }\n\n    private function convert($address)\n    {\n        $result = Util_Api_Object::convert($address, 'address');\n        foreach ($result as $key => $value)\n        {\n            if ( empty($value))\n            {\n                unset($result[$key]);\n            }\n        }\n        return $result;\n    }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[36,56],[36,56]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":196,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/addresses.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a73e792ee2c59ed6c7895f3fbc6cc33ed26cb243","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":178,"softTabs":true,"scrollTop":527,"scrollLeft":0,"displayBuffer":{"id":179,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/coupons.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":196,"softTabs":true,"scrollTop":84,"scrollLeft":0,"displayBuffer":{"id":197,"softWrap":false,"editorWidthInChars":95,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/addresses.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":190,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":191,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/version.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/addresses.php","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/coupons.php":1396511468826,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/addresses.php":1396837796952,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user/version.php":1396511466411},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":3346418},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/app/classes/controller/api/user","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":{"findHistory":["result"],"replaceHistory":[],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}}}}}