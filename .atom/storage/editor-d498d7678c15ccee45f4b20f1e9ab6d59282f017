{"mode":"editor","version":1,"windowDimensions":{"x":758,"y":72,"width":1632,"height":1024},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json","buffers":[{"text":"package jp.co.emenkyo.uds.android.model.json;\n\nimport jp.co.emenkyo.uds.android.util.StringUtils;\nimport net.arnx.jsonic.JSONHint;\n\npublic class JSONLogin extends AbsJSONResponse {\n\n    @JSONHint(name = \"ResultSet\")\n    public JSONTrainee trainee;\n\n    public boolean shouldLogOut() {\n        return StringUtils.isSame(\"999999999\", resultCode) || !trainee.isOnTheSchool();\n    }\n\n    @Override\n    public boolean isValid() {\n        if (!super.isValid()) return false;\n        if (trainee == null || !trainee.isValid()) return false;\n        return true;\n    }\n\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":19},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONLogin.java","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"bc44fd8655c16343d9bb13dc6311022f6c84e9db","deserializer":"TextBuffer"},{"text":"package jp.co.emenkyo.uds.android.model.json;\n\nimport java.io.Serializable;\n\nimport jp.co.emenkyo.uds.android.ServiceApplication;\nimport jp.co.emenkyo.uds.android.util.AppUtils;\nimport jp.co.emenkyo.uds.android.util.LogUtils;\nimport jp.co.emenkyo.uds.android.util.StringUtils;\nimport net.arnx.jsonic.JSONHint;\nimport android.content.Context;\n\nimport com.google.common.base.Objects;\nimport com.google.common.collect.ImmutableMap;\nimport com.snappydb.DB;\nimport com.snappydb.DBFactory;\nimport com.snappydb.SnappydbException;\n\npublic class JSONTrainee implements Serializable {\n    private static final long serialVersionUID = 5981822235897171028L;\n    private static final String SNAPPYDB_KEY_TRAINEE = \"SNAPPYEDB_KEY_TRAINEE_jp.co.emenkyo.uds.android.model.JSONTrainee\";\n\n    private static JSONTrainee sCash;\n    @JSONHint(ignore = true)\n    public String traineeCode;\n\n    @JSONHint(name = \"LstNamK\")\n    public String lastName;\n\n    @JSONHint(name = \"CarCode\")\n    public String carCode;\n\n    @JSONHint(name = \"HonCode\")\n    public String honCode;\n\n    @JSONHint(name = \"GntCode\")\n    public String gntCode;\n    @JSONHint(name = \"ZskCode\")\n    public String zskCode;\n\n    @JSONHint(name = \"NowStep\")\n    public String nowStep;\n    @JSONHint(name = \"StpFlag\")\n    public String isReservableFlag;\n\n    @JSONHint(name = \"ZanMony\")\n    public String leftOver;\n\n    public boolean isValid() {\n        // traineeCodeはレスポンスをパースしたあとオブジェクトに持たせるので，ここではチェックしない．\n        return lastName != null && StringUtils.areNotEmpty(carCode, honCode, gntCode, zskCode, nowStep, isReservableFlag, leftOver);\n    }\n\n    @Override\n    public String toString() {\n        return Objects.toStringHelper(this)//\n                .add(\"traineeCode\", traineeCode)//\n                .add(\"lastName\", lastName)//\n                .add(\"carCode\", carCode)//\n                .add(\"lessonType\", getLessonTypeString())//\n                .add(\"honCode\", honCode)//\n                .add(\"gntCode\", gntCode)//\n                .add(\"zskCode\", zskCode)//\n                .add(\"isOnTheSchool\", isOnTheSchool())//\n                .add(\"段階\", nowStep)//\n                .add(\"stpFlag\", isReservableFlag)//\n                .add(\"isReservableByStpFlag\", StringUtils.isSame(isReservableFlag, \"0\"))//\n                .add(\"canReserve\", canReserve())//\n                .add(\"残金\", leftOver)//\n                .toString();\n\n    }\n\n    /**\n     * @return 予約可能な教習生かどうか\n     */\n    public boolean canReserve() {\n        // 普通自動車教習以外の生徒は，技能予約できない．（学科予定管理は可能）\n        return StringUtils.isSame(isReservableFlag, \"0\") && StringUtils.isSame(carCode, \"2\");\n    }\n\n    /**\n     * \n     * @return 在籍しているかどうか\n     */\n    public boolean isOnTheSchool() {\n        return StringUtils.isSame(zskCode, \"1\");\n    }\n\n    public String getLessonTypeString() {\n        String result = LESSON_TYPE.get(carCode);\n        if (result == null) return \"\";\n        return result;\n    }\n\n    private static final ImmutableMap<String, String> LESSON_TYPE = ImmutableMap.<String, String> builder()//\n            .put(\"2\", \"普通自動車教習\")//\n            .put(\"3\", \"大型特殊\")//\n            .put(\"4\", \"大型二輪車教習\")//\n            .put(\"5\", \"普通二輪車教習\")//\n            .put(\"10\", \"普通二種自動車教習\")//\n            .put(\"13\", \"大型\")//\n            .put(\"14\", \"中型車教習\")//\n            .put(\"15\", \"大型二種\")//\n            .put(\"16\", \"中型二種\")//\n            .build();\n\n    /***********************************************\n     * DB *\n     ***********************************************/\n    public boolean save() {\n        if (traineeCode == null) {\n            LogUtils.e(\"Cannot save.\", new IllegalArgumentException(\"Set traineeCode before saving.\"));\n            return false;\n        }\n        if (isReservableFlag == null) {\n            LogUtils.e(\"Cannot save.\", new IllegalArgumentException(toString()));\n            return false;\n        }\n        DB db = null;\n        Context context = ServiceApplication.getAppContext();\n        try {\n            db = DBFactory.open(context);\n            db.del(SNAPPYDB_KEY_TRAINEE);\n            db.put(SNAPPYDB_KEY_TRAINEE, this);\n            db.close();\n        } catch (SnappydbException e) {\n            if (AppUtils.isDebuggable()) e.printStackTrace();\n            return false;\n        }\n        sCash = this;\n        return true;\n    }\n\n    public static JSONTrainee get() {\n        if (sCash != null) return sCash;\n        DB db = null;\n        Context context = ServiceApplication.getAppContext();\n        JSONTrainee result = null;\n        try {\n            db = DBFactory.open(context);\n            if (db.exists(SNAPPYDB_KEY_TRAINEE)) {\n                result = db.get(SNAPPYDB_KEY_TRAINEE, JSONTrainee.class);\n            }\n            db.close();\n        } catch (SnappydbException e) {\n            if (AppUtils.isDebuggable()) e.printStackTrace();\n        }\n        sCash = result;\n        if (result == null) {\n            // デフォルトを返してやる\n            result = new JSONTrainee();\n        }\n        return result;\n    }\n\n    public static void clearCash() {\n        sCash = null;\n    }\n\n    public static void deleteAll(DB db) throws SnappydbException {\n        db.del(SNAPPYDB_KEY_TRAINEE);\n        clearCash();\n    }\n\n    public static boolean saveLeftOver(String leftOver) {\n        JSONTrainee jsonTrainee = get();\n        if (jsonTrainee == null) {\n            return false;\n        } else {\n            jsonTrainee.leftOver = leftOver;\n        }\n        return jsonTrainee.save();\n    }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[90,38],[90,38]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":23,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONTrainee.java","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"34c2c8c6b7f3b86113f4f65de7c6bad2c354c3e5","deserializer":"TextBuffer"},{"text":"package jp.co.emenkyo.uds.android.model.json;\n\nimport jp.co.emenkyo.uds.android.util.StringUtils;\nimport net.arnx.jsonic.JSONHint;\n\nabstract public class AbsJSONResponse {\n    @JSONHint(name = \"RstCode\")\n    public String resultCode;\n\n    @JSONHint(name = \"RstMess\")\n    public String resultMessage;\n\n    @JSONHint(name = \"KyoCode\")\n    public String traineeCode;\n\n    public boolean isOk() {\n        return StringUtils.isSame(\"000000000\", resultCode);\n    }\n\n    /**\n     * レスポンスが処理続行可能な形式になっているかどうかを返します．\n     * \n     * @return true: 続行可，false：続行不可（パースに失敗）\n     */\n    public boolean isValid() {\n        return StringUtils.areNotEmpty(resultCode, resultMessage);//traineeCode);\n    }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[16,35],[16,45]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":27,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/AbsJSONResponse.java","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a124b1d949a8120ba6a97f15f700773b2b2554c8","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":19,"softTabs":true,"displayBuffer":{"id":20,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONLogin.java","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":27,"softTabs":true,"displayBuffer":{"id":28,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/AbsJSONResponse.java","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":23,"softTabs":true,"displayBuffer":{"id":24,"softWrap":false,"editorWidthInChars":null,"scrollTop":1409,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONTrainee.java","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONTrainee.java","focused":false,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-java"],"deserializer":"Workspace"},"packageStates":{"script":{"scriptOptionsViewState":""},"fuzzy-finder":{"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONLogin.java":1406689176717,"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/AbsJSONResponse.java":1406689179258,"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONTrainee.java":1406689205348},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":321939},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/kwatanabe/git/uds/libraries/PagerTitleStripTest/src/jp/co/emenkyo/uds/android/model/json/JSONTrainee.java","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}