{"mode":"editor","version":1,"windowDimensions":{"x":1950,"y":118,"width":1023,"height":1024},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/whiteplus/lenet/src/com/whplus/lenet/android/app/adapter","buffers":[{"text":"package com.whplus.lenet.android.app.adapter;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport android.content.Context;\nimport android.content.res.Resources;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.BaseAdapter;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.whplus.lenet.android.app.R;\nimport com.whplus.lenet.android.app.model.json.JSONNotification;\nimport com.whplus.lenet.android.app.util.ArrayUtils;\n\npublic class NotificationAdapter extends BaseAdapter{\n\n    private final Context mContext;\n    private List<JSONNotification> mItems;\n    private LayoutInflater mInflater;\n    public NotificationAdapter(Context context) {\n        super();\n        mContext = context;\n        mInflater = LayoutInflater.from(context);\n    }\n\n    public NotificationAdapter(Context context, ArrayList<JSONNotification> items) {\n        super();\n        mContext = context;\n        mInflater = LayoutInflater.from(context);\n        mItems = items;\n    }\n\n    /****************************************\n     * {@link BaseAdapter}\n     ****************************************/\n    @Override\n    public int getCount() {\n        return mItems.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return mItems.get(position);\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        convertView = setupConvertView(position, convertView, parent);\n        return convertView;\n    }\n\n\n    private View setupConvertView(int position, View convertView, ViewGroup parent) {\n        ViewHolder holder;\n        if (convertView == null) {\n            holder = new ViewHolder();\n            convertView = mInflater.inflate(R.layout.list_row_notification, parent, false);\n            holder.iconView = (ImageView) convertView.findViewById(R.id.list_row_notification_icon);\n            holder.messageView = (TextView) convertView.findViewById(R.id.list_row_notification_message);\n            holder.dateView =  (TextView) convertView.findViewById(R.id.list_row_notification_date);\n\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        // holder.text.setText(mItems.get(position).getTitle());\n\n        Resources r = parent.getResources();\n        if (r != null) {\n            JSONNotification item = (JSONNotification) getItem(position);\n            holder.iconView.setImageResource(item.isCoupon() ? R.drawable.icon_push1 : R.drawable.icon_push2);\n            holder.messageView.setText(item.message);\n            String sentAt = item.sent_at;\n            if (item.isCoupon()) {\n                sentAt = r.getString(R.string.Notification_Coupon_Date, //\n                        item.coupon_start_at, item.coupon_end_at);\n            }\n            holder.dateView.setText(sentAt);\n        }\n\n        return convertView;\n    }\n\n    /****************************************\n     * public methods\n     ****************************************/\n\n    public void setItems(ArrayList<JSONNotification> items) {\n        mItems = ArrayUtils.concatList(mItems, items);\n    }\n\n    /****************************************\n     * ViewHolder\n     ****************************************/\n\n    static class ViewHolder {\n        ImageView iconView;\n        TextView messageView;\n        TextView dateView;\n    }\n\n}\n","markers":{"markers":{"1":{"id":1,"range":[[18,13],[18,32]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":12,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/lenet/src/com/whplus/lenet/android/app/adapter/NotificationAdapter.java","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f0ed979eb57155dbddfc19891414b8146bcff43a","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrap":false,"editorWidthInChars":101,"scrollTop":139,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/lenet/src/com/whplus/lenet/android/app/adapter/NotificationAdapter.java","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/whiteplus/lenet/src/com/whplus/lenet/android/app/adapter/NotificationAdapter.java","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"script":{"scriptOptionsViewState":""},"fuzzy-finder":{"/Users/kwatanabe/git/whiteplus/lenet/src/com/whplus/lenet/android/app/adapter/NotificationAdapter.java":1399628675495},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":1268386},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/kwatanabe/git/whiteplus/lenet/src/com/whplus/lenet/android/app/adapter/NotificationAdapter.java","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}