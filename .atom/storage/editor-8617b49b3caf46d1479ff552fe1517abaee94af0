{"mode":"editor","version":1,"windowDimensions":{"x":1095,"y":120,"width":1024,"height":1019},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp","buffers":[{"text":"<?php\n/**\n * @file\n * sample_push.php\n *\n * Push demo\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://code.google.com/p/apns-php/wiki/License\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to aldo.armiento@gmail.com so we can send you a copy immediately.\n *\n * @author (C) 2010 Aldo Armiento (aldo.armiento@gmail.com)\n * @version $Id$\n */\n\ndefine('VALID_TOKEN', '1e82db91c7ceddd72bf33d74ae052ac9c84a065b35148ac401388843106a7485');\ndefine('INVALID_TOKEN', 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n\n// Adjust to your timezone\ndate_default_timezone_set('Europe/Rome');\n\n// Report all PHP errors\nerror_reporting(-1);\n\n// Using Autoload all classes are loaded on-demand\nrequire_once 'ApnsPHP/Autoload.php';\n\n// Instanciate a new ApnsPHP_Push object\n$push = new ApnsPHP_Push(\n\tApnsPHP_Abstract::ENVIRONMENT_SANDBOX,\n\t'server_certificates_bundle_sandbox.pem'\n);\n\n// Set the Root Certificate Autority to verify the Apple remote peer\n$push->setRootCertificationAuthority('entrust_root_certification_authority.pem');\n\n// Increase write interval to 100ms (default value is 10ms).\n// This is an example value, the 10ms default value is OK in most cases.\n// To speed up the sending operations, use Zero as parameter but\n// some messages may be lost.\n// $push->setWriteInterval(100 * 1000);\n\n// Connect to the Apple Push Notification Service\n$push->connect();\n\nfor ($i = 1; $i <= 10; $i++) {\n\t// Instantiate a new Message with a single recipient\n\t$message = new ApnsPHP_Message($i == 5 ? INVALID_TOKEN : VALID_TOKEN);\n\n\t// Set a custom identifier. To get back this identifier use the getCustomIdentifier() method\n\t// over a ApnsPHP_Message object retrieved with the getErrors() message.\n\t$message->setCustomIdentifier(sprintf(\"Message-Badge-%03d\", $i));\n\n\t// Set badge icon to \"3\"\n\t$message->setBadge($i);\n\n\t// Add the message to the message queue\n\t$push->add($message);\n}\n\n// Send all messages in the message queue\n$push->send();\n\n// Disconnect from the Apple Push Notification Service\n$push->disconnect();\n\n// Examine the error message container\n$aErrorQueue = $push->getErrors();\nif (!empty($aErrorQueue)) {\n\tvar_dump($aErrorQueue);\n}\n","markers":{"markers":{"1":{"id":1,"range":[[62,40],[62,40]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/sample_push_many.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ad763029d3d500bd5323d14af7b3f3a7a9b732e5","deserializer":"TextBuffer"},{"text":"<?php\n/**\n * @file\n * sample_push_custom.php\n *\n * Custom Push demo\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://code.google.com/p/apns-php/wiki/License\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to aldo.armiento@gmail.com so we can send you a copy immediately.\n *\n * @author (C) 2010 Aldo Armiento (aldo.armiento@gmail.com)\n * @version $Id$\n */\n\n// Adjust to your timezone\ndate_default_timezone_set('Europe/Rome');\n\n// Report all PHP errors\nerror_reporting(-1);\n\n// Using Autoload all classes are loaded on-demand\nrequire_once 'ApnsPHP/Autoload.php';\n\n// Instanciate a new ApnsPHP_Push object\n$push = new ApnsPHP_Push(\n\tApnsPHP_Abstract::ENVIRONMENT_SANDBOX,\n\t'server_certificates_bundle_sandbox.pem'\n);\n\n// Set the Root Certificate Autority to verify the Apple remote peer\n$push->setRootCertificationAuthority('entrust_root_certification_authority.pem');\n\n// Connect to the Apple Push Notification Service\n$push->connect();\n\n// Instantiate a new Message with a single recipient\n$message = new ApnsPHP_Message_Custom('1e82db91c7ceddd72bf33d74ae052ac9c84a065b35148ac401388843106a7485');\n\n// Set a custom identifier. To get back this identifier use the getCustomIdentifier() method\n// over a ApnsPHP_Message object retrieved with the getErrors() message.\n$message->setCustomIdentifier(\"Message-Badge-3\");\n\n// Set badge icon to \"3\"\n$message->setBadge(3);\n\n// Set a simple welcome text\n$message->setText('Hello APNs-enabled device!');\n\n// Play the default sound\n$message->setSound();\n\n// Set a custom property\n$message->setCustomProperty('acme2', array('bang', 'whiz'));\n\n// Set the expiry value to 30 seconds\n$message->setExpiry(30);\n\n// Set the \"View\" button title.\n$message->setActionLocKey('Show me!');\n\n// Set the alert-message string and variable string values to appear in place of the format specifiers.\n$message->setLocKey('Hello %1$@, you have %2$@ new messages!'); // This will overwrite the text specified with setText() method.\n$message->setLocArgs(array('Steve', 5));\n\n// Set the filename of an image file in the application bundle.\n$message->setLaunchImage('DefaultAlert.png');\n\n// Add the message to the message queue\n$push->add($message);\n\n// Send all messages in the message queue\n$push->send();\n\n// Disconnect from the Apple Push Notification Service\n$push->disconnect();\n\n// Examine the error message container\n$aErrorQueue = $push->getErrors();\nif (!empty($aErrorQueue)) {\n\tvar_dump($aErrorQueue);\n}\n","markers":{"markers":{"1":{"id":1,"range":[[83,0],[84,34]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":18,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/sample_push_custom.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c7ef33ae6d79e3b25b731ab05f71a2f2460a256f","deserializer":"TextBuffer"},{"text":"<?php\n/**\n * @file\n * Autoload stuff.\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://code.google.com/p/apns-php/wiki/License\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to aldo.armiento@gmail.com so we can send you a copy immediately.\n *\n * @author (C) 2010 Aldo Armiento (aldo.armiento@gmail.com)\n * @version $Id$\n */\n\n/**\n * This function is automatically called in case you are trying to use a\n * class/interface which hasn't been defined yet. By calling this function the\n * scripting engine is given a last chance to load the class before PHP\n * fails with an error.\n *\n * @see http://php.net/__autoload\n * @see http://php.net/spl_autoload_register\n *\n * @param  $sClassName @type string The class name.\n * @throws Exception if class name is empty, the current path is empty or class\n *         file does not exists or file was loaded but class name was not found.\n */\nfunction ApnsPHP_Autoload($sClassName)\n{\n\tif (empty($sClassName)) {\n\t\tthrow new Exception('Class name is empty');\n\t}\n\n\t$sPath = dirname(dirname(__FILE__));\n\tif (empty($sPath)) {\n\t\tthrow new Exception('Current path is empty');\n\t}\n\n\t$sFile = sprintf('%s%s%s.php',\n\t\t$sPath, DIRECTORY_SEPARATOR,\n\t\tstr_replace('_', DIRECTORY_SEPARATOR, $sClassName)\n\t);\n\tif (!is_file($sFile) || !is_readable($sFile)) {\n        // ignore.\n        return;\n\t\tthrow new Exception(\"Class file '{$sFile}' does not exists. ClassName is '{$sClassName}'\");\n\t}\n\n\trequire_once $sFile;\n\n\tif (!class_exists($sClassName, false) && !interface_exists($sClassName, false)) {\n\t\tthrow new Exception(\"File '{$sFile}' was loaded but class '{$sClassName}' was not found in file\");\n\t}\n}\n\n// If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack.\n// (PHP Documentation for spl_autoload_register [@see http://php.net/spl_autoload_register])\nif (function_exists('__autoload')) {\n\tspl_autoload_register('__autoload');\n}\nspl_autoload_register('ApnsPHP_Autoload');\n","markers":{"markers":{"1":{"id":1,"range":[[49,15],[49,15]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":20,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[49,0]],"oldText":"","newText":"\t\tthrow new Exception(\"Class file '{$sFile}' does not exists. ClassName is '{$sClassName}'\");\n","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[49,0],[50,0]],"newRange":[[49,0],[49,0]],"oldText":"\t\tthrow new Exception(\"Class file '{$sFile}' does not exists\");\n","newText":"","normalizeLineEndings":{"normalizeLineEndings":false},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[47,48],[47,48]],"newRange":[[47,48],[48,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[48,0],[48,0]],"newRange":[[48,0],[48,8]],"oldText":"","newText":"        ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,8],[48,8]],"newRange":[[48,8],[48,9]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,9],[48,9]],"newRange":[[48,9],[48,10]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[48,10],[48,10]]},"newParams":{"range":[[48,9],[48,10]]},"deserializer":"MarkerPatch"},{"oldRange":[[48,9],[48,10]],"newRange":[[48,9],[48,9]],"oldText":" ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,9],[48,9]],"newRange":[[48,9],[48,10]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,10],[48,10]],"newRange":[[48,10],[48,11]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,11],[48,11]],"newRange":[[48,11],[48,12]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,12],[48,12]],"newRange":[[48,12],[48,13]],"oldText":"","newText":"g","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,13],[48,13]],"newRange":[[48,13],[48,14]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,14],[48,14]],"newRange":[[48,14],[48,15]],"oldText":"","newText":"o","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,15],[48,15]],"newRange":[[48,15],[48,16]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,16],[48,16]],"newRange":[[48,16],[48,17]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,17],[48,17]],"newRange":[[48,17],[48,18]],"oldText":"","newText":".","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,18],[48,18]],"newRange":[[48,18],[49,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[49,0],[49,0]],"newRange":[[49,0],[49,8]],"oldText":"","newText":"        ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,8],[49,8]],"newRange":[[49,8],[49,9]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,9],[49,9]],"newRange":[[49,9],[49,10]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,10],[49,10]],"newRange":[[49,10],[49,11]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,11],[49,11]],"newRange":[[49,11],[49,12]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,12],[49,12]],"newRange":[[49,12],[49,13]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,13],[49,13]],"newRange":[[49,13],[49,14]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[49,14],[49,14]],"newRange":[[49,14],[49,15]],"oldText":"","newText":";","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"60ad8bec4331420f12ac765f30fc45aa077fdf6b","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":16,"softTabs":true,"scrollTop":554,"scrollLeft":0,"displayBuffer":{"id":17,"softWrap":false,"editorWidthInChars":96,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/sample_push_many.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":18,"softTabs":true,"scrollTop":763,"scrollLeft":0,"displayBuffer":{"id":19,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/sample_push_custom.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":20,"softTabs":true,"scrollTop":307,"scrollLeft":0,"displayBuffer":{"id":21,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/sample_push_many.php":1396855214910,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/sample_push_custom.php":1396856249319,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php":1396859546504},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":6407396},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP","hasFocus":false,"attached":true,"scrollLeft":1,"scrollTop":0,"width":200}}}