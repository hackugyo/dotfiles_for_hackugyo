{"mode":"editor","version":1,"windowDimensions":{"x":1815,"y":118,"width":1029,"height":1024},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History","buffers":[{"text":"//\n//  HistoryDetailViewController.h\n//  HiroieClient\n//\n//  Created by takahiro abe on 2014/04/15.\n//  Copyright (c) 2014年 Appirits. All rights reserved.\n//\n\n#import \"HistoryDetailViewController.h\"\n#import \"HistoryDateCell.h\"\n#import \"HistoryChargeCell.h\"\n#import \"HistoryTotalCell.h\"\n#import \"HistoryBaggageCell.h\"\n// GA\n#import \"GAMacros.h\"\n\n#define kHistoryDateCellFont [UIFont fontWithName:@\"HiraKakuProN-W3\" size:16.f]\n#define kHistoryTotalCellFont [UIFont fontWithName:@\"HiraKakuProN-W3\" size:14.f]\n#define kHistoryUILabelMinimumLineHeight 20.f;\n#define kHistoryUILabelMaximumLineHeight 20.f;\n\ntypedef NS_ENUM(NSInteger, CellType) {\n    CellTypeDate,\n    CellTypeCharge,\n    CellTypeTotal,\n    CellTypeTopPadding,\n    CellTypeBaggage\n};\n\n@interface HistoryDetailViewController ()\n\n@end\n\n@implementation HistoryDetailViewController\n\n- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil\n{\n    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];\n    if (self) {\n        \n    }\n    return self;\n}\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    \n    UIImage *backgroundImage = [UIImage imageNamed:@\"bg_content\"];\n    self.view.backgroundColor = [UIColor colorWithPatternImage:backgroundImage];\n    [self hrc_setNavigationBarTranscurent];\n}\n\n- (void)viewWillAppear:(BOOL)animated\n{\n    [super viewWillAppear:animated];\n    GA_TRACK_SCREEN(HRC_GA_SCREEN_HISTORY_DETAIL);\n }\n\n- (void)viewWillDisappear:(BOOL)animated\n{\n    [super viewWillDisappear:animated];\n}\n\n#pragma mark - Private\n\n// TODO:共有のメソッドがあればそちらを使う。\n+(NSNumberFormatter*)currencyFormatter\n{\n    NSNumberFormatter *formatter = [NSNumberFormatter new];\n    [formatter setPositiveFormat:@\"#,##0\"];\n    return formatter;\n}\n\n// TODO:共有のメソッドがあればそちらを使う。\n- (NSString*)numberToCurrency:(NSNumber*)number\n{\n    NSNumberFormatter *formatter = [HistoryDetailViewController currencyFormatter];\n    return [formatter stringFromNumber:number];\n}\n\n\n#pragma mark - UITableViewDataSource && UITableViewDelegate\n\n- (void)hrc_prepareTableView\n{\n    [self.tableView hrc_registerNibForCellWithReuseIdentifier:@\"HistoryCell\"];\n    if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) {\n        self.tableView.separatorInset = UIEdgeInsetsZero;\n    }\n#if DEBUG\n    //    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemRefresh\n    //                                                                                           target:self\n    //                                                                                           action:@selector(reloadDataSource)];\n#endif\n}\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n}\n\n#pragma mark - UITableViewDataSource & UITableViewDelegate\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n    // 日付セル + 料金セル + 料金合計セル\n    NSInteger baseRows = 3;\n    \n    if ([self.history havePickingsOrStorings]) {\n        // (日付セル + 料金セル + 料金合計セル) +\n        //   (paddingセル * 上下分) +\n        //   (荷物セル * 荷物数)\n        return baseRows + 2 + [self.history.pickings_or_storings count];\n    } else {\n        return baseRows;\n    }\n}\n\n- (NSInteger)cellTypeBottomPadding\n{\n    return 3 + 1 + [self.history.pickings_or_storings count];\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    if (CellTypeDate == indexPath.row) {\n        return 44;\n\n    } else if (CellTypeCharge == indexPath.row) {\n        return [HistoryChargeCell rowHeightByHistory:self.history];\n\n    } else if (CellTypeTotal == indexPath.row) {\n        return [HistoryTotalCell rowHeight];\n\n    } else if (CellTypeTopPadding == indexPath.row || [self cellTypeBottomPadding] == indexPath.row) {\n        return 20;\n\n    } else {\n        return [HistoryBaggageCell rowHeight];\n    }\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    if (CellTypeDate == indexPath.row) {\n        return [self headerDateCell:tableView indexPath:indexPath];\n        \n    } else if (CellTypeCharge == indexPath.row) {\n        return [self chargeCell:tableView indexPath:indexPath];\n        \n    } else if (CellTypeTotal == indexPath.row) {\n        return [self totalCell:tableView indexPath:indexPath];\n        \n    } else if (CellTypeTopPadding == indexPath.row || [self cellTypeBottomPadding] == indexPath.row) {\n        return [self paddingCell:tableView indexPath:indexPath];\n        \n    } else {\n        return [self baggageCell:tableView indexPath:indexPath];\n    }\n}\n\n// 日付セル\n-(UITableViewCell *)headerDateCell:(UITableView *)tableView indexPath:(NSIndexPath *)indexPath\n{\n    HistoryDateCell *cell = (HistoryDateCell *)[tableView dequeueReusableCellWithIdentifier:@\"HistoryDateCell\" forIndexPath:indexPath];\n    NSArray *year_and_month = [self.history.year_and_month componentsSeparatedByString:@\"-\"];\n    NSString *year = year_and_month[0];\n    // 先頭の0を削除\n    NSString *month = [NSString stringWithFormat : @\"%d\", [year_and_month[1] intValue]];\n    NSString *date = [NSString stringWithFormat:@\"%@年%@月\", year, month];\n    [cell setDateLabelText:date];\n    return cell;\n}\n\n// 料金セル\n-(HistoryChargeCell *)chargeCell:(UITableView *)tableView indexPath:(NSIndexPath *)indexPath\n{\n    HistoryChargeCell *cell = (HistoryChargeCell*)[tableView dequeueReusableCellWithIdentifier:@\"HistoryChargeCell\" forIndexPath:indexPath];\n    [cell addSubviewsByHistory:self.history];\n    return cell;\n}\n\n// 合計セル\n-(HistoryTotalCell *)totalCell:(UITableView *)tableView indexPath:(NSIndexPath *)indexPath\n{\n    HistoryTotalCell *cell = (HistoryTotalCell*)[tableView dequeueReusableCellWithIdentifier:@\"HistoryTotalCell\" forIndexPath:indexPath];\n    NSString *totalPrice = [self numberToCurrency:self.history.amount_of_amounts];\n    [cell setTotalPriceLabelText:totalPrice];\n    return cell;\n}\n\n// 収納、取出セル\n-(HistoryBaggageCell *)baggageCell:tableView indexPath:(NSIndexPath *)indexPath\n{\n    HistoryBaggageCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"HistoryBaggageCell\" forIndexPath:indexPath];\n    // 日付セル + 料金セル + 合計セル + paddingセル\n    NSInteger otherRowsCount = 4;\n    HKHistoryBaggage *baggage = self.history.pickings_or_storings[indexPath.row - otherRowsCount];\n    \n    NSArray *date = [baggage.date componentsSeparatedByString:@\"-\"];\n    cell.dateLabel.text = [NSString stringWithFormat : @\"%d/%d\", [date[1] intValue], [date[2] intValue]];\n    cell.nameLabel.text = baggage.name;\n    cell.requestTypeLabel.text = [NSString stringWithFormat:@\"[%@]\", baggage.requestTypeName];\n    cell.priceLabel.text = [self numberToCurrency:baggage.transport_charge];\n    return cell;\n}\n\n-(UITableViewCell *)paddingCell:tableView indexPath:(NSIndexPath *)indexPath\n{\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"PaddingCell\" forIndexPath:indexPath];\n    return cell;\n}\n\n- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell\nforRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    if (indexPath.row != 0) {\n        // iOS6でセルの背景がviewの背景画像になるのを防ぐ\n        cell.backgroundColor = [UIColor whiteColor];\n    }\n}\n\n// GA\n- (void)hrc_GATrackTap:(NSString*)label\n{\n    HRC_GA_TRACK_EVENT_TAP(HRC_GA_CATEGORY_HISTORY, label);\n}\n\n@end\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":11,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryDetailViewController.m","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"af45a28b7b0d27efb1e82c335664f0697149760a","deserializer":"TextBuffer"},{"text":"//\n//  HistoryListViewController.h\n//  HiroieClient\n//\n//  Created by Kosuke Matsuda on 2014/03/19.\n//  Copyright (c) 2014年 Appirits. All rights reserved.\n//\n\n#import <UIKit/UIKit.h>\n#import \"HKHistory.h\"\n\n@interface HistoryListViewController : UIViewController\n{\n    NSInteger _totalCount;\n}\n\n@property (nonatomic, strong) NSMutableArray *dataSource;\n@property (strong, nonatomic) NSOperationQueue *queue;\n@property (strong, nonatomic) IBOutlet UITableView *tableView;\n\n- (void)didFinishLoadDataSource;\n\n@end\n","markers":{"markers":{"1":{"id":1,"range":[[1,0],[1,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":13,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.h","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5288504d06ad50d444f72ac878008cc732df3d55","deserializer":"TextBuffer"},{"text":"//\n//  HistoryListViewController+API.h\n//  HiroieClient\n//\n//  Created by nagao on 2014/04/07.\n//  Copyright (c) 2014年 Appirits. All rights reserved.\n//\n\n#import \"HistoryListViewController.h\"\n#import \"HRCAuthClient.h\"\n\n@interface HistoryListViewController (API)\n\n- (void)requestHistoriesAPI;\n- (void)cancelHistoriesAPI;\n\n@end\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":15,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController+API.h","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a4c09e19a640c6a4cc38ff0b68d9c205397e234e","deserializer":"TextBuffer"},{"text":"//\n//  HistoryListViewController.m\n//  HiroieClient\n//\n//  Created by Kosuke Matsuda on 2014/03/19.\n//  Copyright (c) 2014年 Appirits. All rights reserved.\n//\n\n#import \"HistoryListViewController.h\"\n#import \"HistoryListViewController+API.h\"\n#import \"HistoryDetailViewController.h\"\n#import \"HistoryCell.h\"\n// GA\n#import \"GAMacros.h\"\n\n#define kHistoryDateCellFont [UIFont fontWithName:@\"HiraKakuProN-W3\" size:16.f]\n#define kHistoryTotalCellFont [UIFont fontWithName:@\"HiraKakuProN-W3\" size:14.f]\n#define kHistoryUILabelLineHeight 20.f\n#define kHisotryUILabelFontColor  kColorWithHexString(@\"333333ff\")\n\n@interface HistoryListViewController ()\n\n@end\n\n@implementation HistoryListViewController\n\n- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil\n{\n    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];\n    if (self) {\n\n    }\n    return self;\n}\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n   \n    UIImage *backgroundImage = [UIImage imageNamed:@\"bg_content\"];\n    self.view.backgroundColor = [UIColor colorWithPatternImage:backgroundImage];\n    [self hrc_setNavigationBarTranscurent];\n    \n    self.dataSource = [NSMutableArray array];\n    self.queue = [NSOperationQueue new];\n    [self loadDataSource];\n    [self hrc_prepareTableView];\n}\n\n- (void)viewWillAppear:(BOOL)animated\n{\n    [super viewWillAppear:animated];\n    GA_TRACK_SCREEN(HRC_GA_SCREEN_HISTORY);\n    [self hrc_deselectRowInTableView];\n}\n\n- (void)viewWillDisappear:(BOOL)animated\n{\n    [super viewWillDisappear:animated];\n    [self cancelHistoriesAPI];\n}\n\n- (void)dealloc\n{\n    [self.queue cancelAllOperations];\n}\n\n#pragma mark - UITableViewDataSource && UITableViewDelegate\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n}\n\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section\n{\n    return [self.dataSource count];\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    return 44;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    HistoryCell *cell = [tableView dequeueReusableCellWithIdentifier:@\"HistoryCell\" forIndexPath:indexPath];\n    HKHistory *history = [self history:indexPath.row];\n    NSString *year = [history year];\n    // 先頭の0を削除\n    NSString *month = [NSString stringWithFormat : @\"%d\", [[history month] intValue]];\n    NSString *date = [NSString stringWithFormat:@\"%@年%@月\", year, month];\n    [self setLabelAttribute:cell.dateLabel withText:date font:kHistoryDateCellFont];\n    return cell;\n}\n\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    [self hrc_GATrackTapWithIndexPath:indexPath];\n}\n\n- (void)setLabelAttribute:(UILabel *)label withText:(NSString *)text font:font\n{\n    NSMutableAttributedString *attrString = [[NSMutableAttributedString alloc] initWithString:text];\n    [attrString hrc_addAttributeWithFont:font fontColor:kHisotryUILabelFontColor lineHight:kHistoryUILabelLineHeight];\n    label.attributedText = attrString;\n}\n\n- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath\n{\n    // iOS6でセルの背景がviewの背景画像になるのを防ぐ\n    cell.backgroundColor = [UIColor whiteColor];\n    \n    NSInteger count = self.dataSource.count;\n    if (indexPath.row == count -1) {\n        NSInteger totalCount = _totalCount;\n        if (totalCount > count) {\n            [self loadDataSource];\n        }\n    }\n}\n\n// テーブルの空行のボーダーを消す。\n- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section\n{\n    UIView *view = [[UIView alloc] init];\n    return view;\n}\n\n// セクションフッタを見えないようにする。\n- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section\n{\n    return 0.01f;\n}\n\n#pragma mark - Navigation\n\n- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender\n{\n    if ([[segue identifier] isEqualToString:kSegueIdentifierHistoryDetail]) {\n        HistoryDetailViewController *destination = (HistoryDetailViewController *)segue.destinationViewController;\n        NSInteger index = [self.tableView indexPathForSelectedRow].row;\n        destination.history = [self.dataSource objectAtIndex:index];\n    }\n}\n\n#pragma mark - Private\n\n- (void)loadDataSource\n{\n    if ([self hrc_canIndicateForTableView:self.tableView]) {\n        [self hrc_willIndicateForTableView:self.tableView];\n        [self requestHistoriesAPI];\n    }\n}\n\n- (NSString *)hrc_emptyMessageForTableView:(UITableView *)tableView\n{\n    return @\"履歴はありません。\";\n}\n\n- (void)didFinishLoadDataSource\n{\n    [self hrc_didIndicateForTableView:self.tableView];\n}\n\n- (HKHistory *)history:(NSInteger)row\n{\n    if (self.dataSource.count > row) {\n        return [self.dataSource objectAtIndex:row];\n    }\n    return nil;\n}\n\n// GA\n- (void)hrc_GATrackTapWithIndexPath:(NSIndexPath*)indexPath\n{\n    HKHistory *history = [self history:indexPath.row];\n    NSArray *year_and_month = [history.year_and_month componentsSeparatedByString:@\"-\"];\n    NSString *year = year_and_month[0];\n    NSString *month = year_and_month[1];\n    NSString *label = [NSString stringWithFormat:@\"%@/%@\", year, month];\n    HRC_GA_TRACK_EVENT_TAP(HRC_GA_CATEGORY_HISTORY, label);\n}\n\n@end\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":19,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.m","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"16e61fb98f99e617c24a5760dc016dbea89daa3f","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":11,"softTabs":true,"displayBuffer":{"id":12,"softWrap":false,"editorWidthInChars":101,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryDetailViewController.m","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":13,"softTabs":true,"displayBuffer":{"id":14,"softWrap":false,"editorWidthInChars":101,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.h","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":15,"softTabs":false,"displayBuffer":{"id":16,"softWrap":false,"editorWidthInChars":88,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController+API.h","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":19,"softTabs":true,"displayBuffer":{"id":20,"softWrap":false,"editorWidthInChars":88,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.m","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.m","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryDetailViewController.m":1398326763760,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.h":1398326802730,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController+API.h":1398326850524,"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.m":1398843992682},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":2446089},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_client/HiroieClient/Classes/Controllers/History/HistoryListViewController.m","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":310},"script":{"scriptOptionsViewState":""}}}