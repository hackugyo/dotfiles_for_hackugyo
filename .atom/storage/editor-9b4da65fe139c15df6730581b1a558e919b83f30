{"mode":"editor","version":1,"windowDimensions":{"x":515,"y":99,"width":1024,"height":1058},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP","buffers":[{"text":"<?php\n/**\n * @file\n * Autoload stuff.\n *\n * LICENSE\n *\n * This source file is subject to the new BSD license that is bundled\n * with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://code.google.com/p/apns-php/wiki/License\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to aldo.armiento@gmail.com so we can send you a copy immediately.\n *\n * @author (C) 2010 Aldo Armiento (aldo.armiento@gmail.com)\n * @version $Id$\n */\n\n/**\n * This function is automatically called in case you are trying to use a\n * class/interface which hasn't been defined yet. By calling this function the\n * scripting engine is given a last chance to load the class before PHP\n * fails with an error.\n *\n * @see http://php.net/__autoload\n * @see http://php.net/spl_autoload_register\n *\n * @param  $sClassName @type string The class name.\n * @throws Exception if class name is empty, the current path is empty or class\n *         file does not exists or file was loaded but class name was not found.\n */\nfunction ApnsPHP_Autoload($sClassName)\n{\n\tif (empty($sClassName)) {\n\t\tthrow new Exception('Class name is empty');\n\t}\n\n\t$sPath = dirname(dirname(__FILE__));\n\tif (empty($sPath)) {\n\t\tthrow new Exception('Current path is empty');\n\t}\n\n\t$sFile = sprintf('%s%s%s.php',\n\t\t$sPath, DIRECTORY_SEPARATOR,\n\t\tstr_replace('_', DIRECTORY_SEPARATOR, $sClassName)\n\t);\n\tif (!is_file($sFile) || !is_readable($sFile)) {\n\t\treturn;//throw new Exception(\"Class file '{$sFile}' does not exists\");\n\t}\n\n\trequire_once $sFile;\n\n\tif (!class_exists($sClassName, false) && !interface_exists($sClassName, false)) {\n\t\tthrow new Exception(\"File '{$sFile}' was loaded but class '{$sClassName}' was not found in file\");\n\t}\n}\n\n// If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack.\n// (PHP Documentation for spl_autoload_register [@see http://php.net/spl_autoload_register])\nif (function_exists('__autoload')) {\n\tspl_autoload_register('__autoload');\n}\nspl_autoload_register('ApnsPHP_Autoload');\n","markers":{"markers":{"1":{"id":1,"range":[[48,9],[48,9]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":14,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[48,2],[48,2]],"newRange":[[48,2],[48,3]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,3],[48,3]],"newRange":[[48,3],[48,4]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,2],[48,2]],"newRange":[[48,2],[48,3]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,3],[48,3]],"newRange":[[48,3],[48,4]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,4],[48,4]],"newRange":[[48,4],[48,5]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,5],[48,5]],"newRange":[[48,5],[48,6]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,6],[48,6]],"newRange":[[48,6],[48,7]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,7],[48,7]],"newRange":[[48,7],[48,8]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,8],[48,8]],"newRange":[[48,8],[48,9]],"oldText":"","newText":";","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ef534107567ba7177b0b3e4699052208e13a7c95","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":14,"softTabs":true,"scrollTop":268,"scrollLeft":0,"displayBuffer":{"id":15,"softWrap":false,"editorWidthInChars":101,"tokenizedBuffer":{"bufferPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","tabLength":4,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php":1396869054224},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":88138},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/kwatanabe/git/whiteplus/hiroie/hiroie_api_develop/api.hiroie.jp/fuel/packages/apnsphp/ApnsPHP/Autoload.php","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}